on:
  push:

jobs:
  build_and_push_to_ECR:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t simprekognition-sensur .

      - name: Tag and push to ECR
        if: github.ref == 'refs/heads/master'
        run: |
          rev=$(git rev-parse --short HEAD)
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          docker tag simprekognition-sensur 244530008913.dkr.ecr.eu-west-1.amazonaws.com/mama014-private-sensur:${rev}
          docker tag simprekognition-sensur 244530008913.dkr.ecr.eu-west-1.amazonaws.com/mama014-private-sensur:latest
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/mama014-private-sensur:${rev}
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/mama014-private-sensur:latest

  terraform:
    needs: build_and_push_to_ECR
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-west-1
      ACCESS_ROLE: arn:aws:iam::244530008913:role/service-role/AppRunnerECRAccessRole
      IMAGE: 244530008913.dkr.ecr.eu-west-1.amazonaws.com/mama014-private-sensur:latest
      POLICY_NAME: 2011-apr-policy
      PORT: 8080
      ROLE_NAME: Kandidat2011Sim
      SERVICE_NAME: Kandidat2011Service
      DASHBOARD_NAME: kandidat2011simp
      ALARM_EMAIL: marcus1sp2@gmail.com
    defaults:
      run:
        working-directory: ./infra
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        run: |
          terraform init

      - name: Terraform Plan
        id: plan
        run: |
            terraform plan -var "access_role=${ACCESS_ROLE}" -var "image=${IMAGE}" -var "policy_name=${POLICY_NAME}" -var "port=${PORT}" -var "role_name=${ROLE_NAME}" -var "service_name=${SERVICE_NAME}" -var "dashboard_name=${DASHBOARD_NAME}" -var "alarm_email=${ALARM_EMAIL}" -no-color

        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: |
          terraform apply -var "access_role=${ACCESS_ROLE}" -var "image=${IMAGE}" -var "policy_name=${POLICY_NAME}" -var "port=${PORT}" -var "role_name=${ROLE_NAME}" -var "service_name=${SERVICE_NAME}" -var "dashboard_name=${DASHBOARD_NAME}" -var "alarm_email=${ALARM_EMAIL}" -auto-approve

